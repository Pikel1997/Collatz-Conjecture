import numpy as np
import matplotlib.pyplot as plt
import PySimpleGUI as sg

layout = [
    [sg.Text('Enter Value of n-', size=(15, 1)), sg.InputText(size=(5, 1))],
    [sg.Button('Go'), sg.Button('Exit')]
]
window = sg.Window('Demo', layout)

# main function, just applying 3n+1 to odd numbers and dividing the even numbers by 2. 
def collatz(n):
    global yvalues, xvalues
    yvalues = []
    xvalues = []
    count = 0
    while n > 1:
        xvalues.append(count)
        count += 1
        yvalues.append(n)
        if n % 2:
            n = 3 * n + 1
        else:
            n = n // 2
    print(yvalues, '\n', "Iterations = ", count, '\n')


# running the test for the first thousand numbers and plotting each sequence.
def result():
    for i in range(1, int(v)):
        print("Sequence = ", end="")
        collatz(i)
        plt.plot(np.array(xvalues),
                 np.array(yvalues),
                 color='black',
                 marker='o',
                 markerfacecolor='yellow',
                 markersize=3)
        try:
            # np.max() returns a value error because of the empty array generated by the first sequence
            mvalues = np.max(np.array(yvalues))
            plt.annotate(mvalues,
                         (np.array(yvalues).argmax(), mvalues),
                         textcoords="offset points",
                         xytext=(0, 5),
                         ha='center')
        except ValueError:
            pass


while True:
    event, values = window.read()
    v = values[0]
    if event == 'Exit' or event == sg.WIN_CLOSED:
        break
    if event == 'Go':
        plt.title("Collatz")
        plt.xlabel("Iterations/Steps")
        plt.ylabel("Numbers")
        plt.gca().spines['top'].set_visible(False)
        plt.gca().spines['right'].set_visible(False)
        result()
        plt.grid()
        plt.show()
window.close()

